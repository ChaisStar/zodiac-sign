// Code generated by "stringer -type=ChineseSign"; DO NOT EDIT.

package models

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[Rat-1]
	_ = x[Ox-2]
	_ = x[Tiger-3]
	_ = x[Rabbit-4]
	_ = x[Dragon-5]
	_ = x[Snake-6]
	_ = x[Horse-7]
	_ = x[Goat-8]
	_ = x[Monkey-9]
	_ = x[Rooster-10]
	_ = x[Dog-11]
	_ = x[Pig-12]
}

const _ChineseSign_name = "RatOxTigerRabbitDragonSnakeHorseGoatMonkeyRoosterDogPig"

var _ChineseSign_index = [...]uint8{0, 3, 5, 10, 16, 22, 27, 32, 36, 42, 49, 52, 55}

func (i ChineseSign) String() string {
	i -= 1
	if i < 0 || i >= ChineseSign(len(_ChineseSign_index)-1) {
		return "ChineseSign(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _ChineseSign_name[_ChineseSign_index[i]:_ChineseSign_index[i+1]]
}
